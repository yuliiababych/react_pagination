{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","currentPage","perPage","total","onPageChange","pagesCount","Math","ceil","pages","quantity","range","i","push","createRange","className","cn","disabled","href","onClick","map","page","active","changePage","items","from","to","numbers","n","getNumbers","App","useState","setCurrentPage","itemsOnPage","setItemsOnPage","usedItems","firstItemOnPage","lastItemOnPage","length","showedItems","slice","id","onChange","event","target","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAqBO,IAAMA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,YACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,MACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKJ,EAAQD,GAC/BM,EAlBR,SAAqBL,EAAeD,GAIlC,IAHA,IAAMO,EAAWH,KAAKC,KAAKJ,EAAQD,GAC7BQ,EAAQ,GAELC,EAAI,EAAGA,GAAKF,EAAUE,GAAK,EAClCD,EAAME,KAAKD,GAGb,OAAOD,EAUOG,CAAYV,EAAOD,GAoBjC,OACE,qBAAIY,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBf,IAA3C,SACE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBhB,EACfiB,QAdS,WACK,IAAhBjB,GACFG,EAAaH,EAAc,IAOzB,oBAUDO,EAAMW,KAAI,SAAAC,GAAI,OACb,oBAAIN,UAAWC,IAAG,YAAa,CAAEM,OAAQpB,IAAgBmB,IAAzD,SACE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBArCA,SAACE,GACdnB,IAAgBmB,GAClBhB,EAAagB,GAmCQE,CAAWF,IAJ5B,SAMGA,SAKP,oBAAIN,UAAWC,IAAG,YAAa,CAAEC,SAAUf,IAAgBI,IAA3D,SACE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAAehB,IAAgBI,EAC/Ba,QA5CS,WACXjB,IAAgBI,GAClBD,EAAaH,EAAc,IAqCzB,wBCrEFsB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQd,KAAKe,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBT,KAAI,SAAAQ,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAO7B,EAAP,KAAoB8B,EAApB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAEMC,EAAYjC,EAAc+B,EAC1BG,EAAkBD,GAAaF,EAAc,GAC7CI,EAAiBF,EAAYX,EAAMc,OACrCd,EAAMc,OACNH,EAOEI,EAAcf,EAAMgB,MAAMJ,EAAkB,EAAGC,GAErD,OACE,sBAAKtB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWb,EADX,mBACiCkC,EADjC,cACsDC,EADtD,eAC2Eb,EAAMc,OADjF,OAIA,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,SArBiB,SAACC,GAC1BT,GAAgBS,EAAMC,OAAOC,OAC7Bb,EAAe,IAoBPa,MAAOZ,EALT,UAOE,wBAAQY,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAOoB,EAAMc,OACbpC,YAAaA,EACbC,QAAS8B,EACT5B,aAAc2B,IAGfO,EAAYnB,KAAI,SAAA2B,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,UE5DhCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a6250616.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  currentPage: number,\n  perPage: number,\n  total: number,\n  onPageChange: (value: number) => void,\n};\n\nfunction createRange(total: number, perPage: number) {\n  const quantity = Math.ceil(total / perPage);\n  const range = [];\n\n  for (let i = 1; i <= quantity; i += 1) {\n    range.push(i);\n  }\n\n  return range;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  perPage,\n  total,\n  onPageChange,\n}) => {\n  const pagesCount = Math.ceil(total / perPage);\n  const pages = createRange(total, perPage);\n\n  const changePage = (page: number) => {\n    if (currentPage !== page) {\n      onPageChange(page);\n    }\n  };\n\n  const nextPage = () => {\n    if (currentPage !== pagesCount) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const prevPage = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={prevPage}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li className={cn('page-item', { active: currentPage === page })}>\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => changePage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', { disabled: currentPage === pagesCount })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pagesCount}\n          onClick={nextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsOnPage, setItemsOnPage] = useState(5);\n\n  const usedItems = currentPage * itemsOnPage;\n  const firstItemOnPage = usedItems - (itemsOnPage - 1);\n  const lastItemOnPage = usedItems > items.length\n    ? items.length\n    : usedItems;\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsOnPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const showedItems = items.slice(firstItemOnPage - 1, lastItemOnPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleSelectChange}\n            value={itemsOnPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        currentPage={currentPage}\n        perPage={itemsOnPage}\n        onPageChange={setCurrentPage}\n      />\n\n      {showedItems.map(item => (\n        <li data-cy=\"item\" key={item}>{item}</li>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}